setwd("C:\\Users\\Windows 10\\Desktop\\jigsaw academy vaibhav")
cam = read.table("Campaign_File.txt",header=T,sep="\t")
cus = read.table("Customers_File.txt",header=T,sep="\t")
pro = read.table("Products_File.txt",header=T,sep="\t")
trans =read.table("Transactions_File.txt",header=T,sep="\t")
options(scipen = 999)

str(cam)
str(cus)
str(pro)
str(trans)

summary(cam)
summary(cus)
summary(pro)
summary(trans)

# missing values
colSums(is.na(cam))
colSums(is.na(cus))
colSums(is.na(pro))
colSums(is.na(trans))


# 1.
transpro = merge(x=pro,y=trans,by="Product_Code")
str(transpro)
summary(transpro)

# i. method
TS=sum(transpro$Items_Amount)
TS
transpro%>%filter(Items_Amount>0)%>%group_by(Product_Category)%>%summarise(Count=n(),Percentage_Count=n()/350241,
                                                                          Total_Sales=sum(Items_Amount),
                                                                          Percentage_Sales=Total_Sales/
                                                                            TS,Average=mean(Items_Amount))%>%
  ungroup()%>%arrange(-Total_Sales)%>%mutate(Contribution.Sales=rep("Product",7))%>%data.frame()->sales
sales

# ii.
transpro%>%group_by(Product_Category)%>%summarise(Count=n(),Percentage_count=n()/350241,Total_Sales=sum(Items_Amount),Percent_Sales=Total_Sales/TS,Avergae=mean(Items_Amount))%>%
  ungroup()%>%arrange(-Total_Sales)%>%data.frame->transpro_table

#Writing out the solution table in .csv format.
write.csv(tranpro_table,"Revenue Generated by Product Category.csv",row.names = F)


#=>Graphical Representation of Amount of Revenue Generation by Product Category.
transpro%>%group_by(Product_Category)%>%summarize(Tot_Sales=sum(Items_Amount))%>%melt()->tot_sales

tot_sales$per_sales<-round(tot_sales$value/TS,2)

p<-ggplot(tot_sales,aes(x=Product_Category,y=value,fill=Product_Category))
p+geom_bar(stat="identity",alpha=0.7)+labs(fill="Product Category")+
  geom_text(aes(label=per_sales,colour=per_sales),vjust=-0.3,size=5)+theme_classic()+
  scale_fill_discrete(c=50,h=c(1,360),h.start =50)+guides(color=FALSE)+xlab("Product Category")+
  ylab("Sales in $")+ggtitle("Revenue Generated by Product Category")+
  scale_y_continuous(breaks=seq(0,35000000,5000000))



tr_cus=merge(x=trans,y=cus,by="Card_ID")
tr_cus$Birth_Date<-ymd(tr_cus$Birth_Date)
yr<-duration(num = 1,units = "years")
date=as.Date("01/01/2017",format="%d/%m/%Y")
tr_cus$age=interval(tr_cus$Birth_Date,date)/yr
head(tr_cus$age,100)
tr_cus$age=round(tr_cus$age)
tr_cus=arrange(tr_cus,age)
tr_cus$age_grp=cut(tr_cus$age,breaks=c(25,40,55,70,85,100,115),labels = c("25-40","40-55","55-70","70-85","85-100","100-115"))
remove(tr_cus$age_grp)
tr_cus=tr_cus[-12]
TS=sum(tr_cus$Items_Amount)
tr_cus%>%na.omit()%>%group_by(age_grp)%>%summarise(Count=n(),percent_count=n()/350241,Total_sales=sum(Items_Amount),percent_sales=Total_sales/TS,Average=mean(Items_Amount))%>%ungroup()%>%data.frame->data2
summary(tr_cus$age_grp)
cam%>%group_by(Campaign_Responce)%>%summarise(Count=n(),Percentage_Count=n()/5957*100)%>%
  arrange(-Campaign_Responce)%>%data.frame()

data2
table(tr_cus$age_grp,tr_cus$Gender)
cc=merge(x=cam,y=cus,by="Card_ID")
summary(cc$Campaign_Responce)
t=sum(cc$Campaign_Responce)
cc%>%group_by(Campaign_Responce)%>%summarise(Count=n(),percentage_c=n()/5957)->pc
pc$percentage_c=round(pc$percentage_c,3)
pc


cus$Registration_Date=ymd(cus$Registration_Date)
yr1=duration(num = 1,units = "years")
date1=as.Date("31/12/2004",format="%d/%m/%Y")
cus$tanure=interval(cus$Registration_Date,date1)/yr1
str(cus)
cus$tanure_grp=cut(cus$tanure,breaks = c(3,4.5,6,7.5),labels = c("3-4.5","4.5-6","6-7.5"))
cus=cus[-5]
cus$tanure=round(cus$tanure,2)
table(cc$tanure_grp,cc$Campaign_Responce)->tab
tab
t_rate=tab[,"TRUE"]/rowSums(tab)*100
t_rate
